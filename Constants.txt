;Timers
(defconst increase-town-size-timer 1)
(defconst reset-town-size-timer 2)
(defconst scouting-timer 3)
(defconst attack-timer 4)
(defconst spread-military-timer 5)
; 6 used for wr
(defconst under-attack-timer 7)
(defconst civ-explore-timer 8); should
(defconst lumber-timer 8); be fine
(defconst one-minute-timer 9)
(defconst tribute-timer 10)
(defconst micro-timer 11)
(defconst navy-attack-timer 12); don't spam attack or we can't retreat boats from fortifications
(defconst help-ally-timer 13); indicated when we sent help to an ally
(defconst FDrop 14); timer for forcedrop to continuously train villager
(defconst retreat-timer 15); timer to avoid looping retreat unit commands
(defconst hunting-timer 16)
(defconst garrison-timer 17)
(defconst disable-defend-groups-timer 18); always enable defending again
(defconst monk-micro-timer 19)
(defconst misc-micro-timer 20)
(defconst train-forward-timer 21)
(defconst rally-units-timer 22)
(defconst reset-units-timer 23)
(defconst attack-chat 24)
(defconst stance 25)
(defconst thirty 26)
(defconst tensec 27)
(defconst two-minute-timer 28)
(defconst defend-timer 29)
(defconst resign-timer 30)
(defconst human-coop-timer 31)
(defconst tribute-timer2 32)
(defconst reset-timer 33)
(defconst boar-timer 34)

;Unit IDs
(defconst male-hunter 122)
(defconst female-hunter 216)
(defconst male-forager 120)
(defconst female-forager 354)
(defconst male-shepherd 592)
(defconst female-shepherd 590)
(defconst female-gold-miner 579)
(defconst male-gold-miner 581)
(defconst hunter 976)
(defconst food-gatherer 978)
(defconst ri-herbal-medicine 441)
(defconst ri-perfusion 457)
(defconst ri-anarchy 16)
(defconst ri-spies 408); useless for AIs
(defconst ri-treadmill-crane 54)
(defconst unpacked-trebuchet 42)
(defconst b-husk-line 759)
(defconst ranged-unit-class 900)
(defconst building-class 903)
(defconst villager-class 904)
(defconst infantry-class 906)
(defconst cavalry-unit-class 912)
(defconst siege-unit-class 913)
(defconst monastery-class 918)
(defconst mounted-gun-class 923)
(defconst cavalry-archer-class 936)
(defconst gunpowder-class 944)
(defconst scorpion-class 955)
(defconst tower-class 952)
(defconst warship-class 922)
(defconst tree-class 915)
(defconst forage-bush 59)
(defconst gold-mine 66)
(defconst stone-mine 102)
(defconst shore-fish 933)
(defconst sea-fish 905)
(defconst sheep 958)
(defconst relic 285)
(defconst revealer 112)
(defconst flare 274)
(defconst tc-arrow 54)
(defconst watch-tower-arrow 786)
(defconst castle-arrow 746)
(defconst castle-arrow-chemistry 747)

;User Patch
(defconst game-time 0); FactId Constants
(defconst population-cap 1)
(defconst population-headroom 2)
(defconst housing-headroom 3)
(defconst idle-farm-count 4)
(defconst food-amount 5)
(defconst wood-amount 6)
(defconst stone-amount 7)
(defconst gold-amount 8)
(defconst escrow-amount 9)
(defconst commodity-buying-price 10)
(defconst commodity-selling-price 11)
(defconst dropsite-min-distance 12)
(defconst soldier-count 13)
(defconst attack-soldier-count 14)
(defconst defend-soldier-count 15)
(defconst warboat-count 16)
(defconst attack-warboat-count 17)
(defconst defend-warboat-count 18)
(defconst current-age 19)
(defconst current-score 20)
(defconst civilization 21)
(defconst player-number 22)
(defconst player-in-game 23)
(defconst unit-count 24)
(defconst unit-type-count 25)
(defconst unit-type-count-total 26)
(defconst building-count 27)
(defconst building-type-count 28)
(defconst building-type-count-total 29)
(defconst population 30)
(defconst military-population 31)
(defconst civilian-population 32)
(defconst random-number 33)
(defconst resource-amount 34)
(defconst player-distance 35)
(defconst allied-goal 36)
(defconst allied-sn 37)
(defconst resource-percent 38)
(defconst enemy-buildings-in-town 39)
(defconst enemy-units-in-town 40)
(defconst enemy-villagers-in-town 41)
(defconst players-in-game 42)
(defconst defender-count 43)
(defconst building-type-in-town 44)
(defconst unit-type-in-town 45)
(defconst villager-type-in-town 46)
(defconst gaia-type-count 47)
(defconst gaia-type-count-total 48)
(defconst cc-gaia-type-count 49)
(defconst aggressive 0)
(defconst defensive 1)
(defconst stand-ground 2)
(defconst no-attack 3)
(defconst projectile-town-center 0); Define ProjectileType Constants
(defconst projectile-castle 1)
(defconst projectile-watch-tower 2)
(defconst projectile-bombard-tower 3)
(defconst projectile-ship 4)
(defconst projectile-siege 5)
(defconst projectile-fortification 6)
(defconst projectile-any 7)
(defconst find-attacker 0); Define FindPlayerMethod Constants
(defconst find-random 1)
(defconst find-closest 2)
(defconst find-ordered 3)
(defconst research-unavailable 0); Define ResearchState Constants
(defconst research-available 1)
(defconst research-pending 2)
(defconst research-complete 3)
(defconst timer-disabled 0); Define TimerState Constants
(defconst timer-triggered 1)
(defconst timer-running 2)
(defconst group-type-land-attack 100);Define GroupType Constants
(defconst group-type-land-explore 101)
(defconst group-type-land-trade 109)
(defconst group-type-water-attack 102)
(defconst group-type-water-explore 103)
(defconst group-type-water-trade 106)
(defconst group-type-transport-ship 104)
(defconst group-type-fishing-ship 105)
(defconst group-type-forward-builder 107)
(defconst group-type-monk 108)
(defconst amount-tribute-inefficiency 46)
(defconst position-center 0)
(defconst position-opposite 1)
(defconst position-corner 2)
(defconst position-enemy 3)
(defconst position-border 4)
(defconst position-mirror 5)
(defconst position-flank 6)
(defconst position-zero 7)
(defconst position-map-size 8)
(defconst position-self 9)
(defconst position-target 10)
(defconst position-focus 11)
(defconst position-object 12)
(defconst position-point 13)
(defconst sort-targets 0)
(defconst sort-random 1)
(defconst sort-distance 2)
(defconst sort-hitpoints 3)
(defconst sort-range 4)
;(defconst find-attacker 0)
;(defconst find-random 1)
;(defconst find-closest 2)
;(defconst find-ordered 3)
(defconst ally 0)
(defconst neutral 1)
(defconst any 2)
(defconst enemy 3)

(defconst sheep-food 958)
(defconst boar-food 910)


#load-if-defined CIV-TAGS-FOR-EDITOR
(defconst ITALIAN-CIV 0)
(defconst MAGYAR-CIV 0)
(defconst INDIAN-CIV 0)
(defconst SLAVIC-CIV 0)
(defconst INCAN-CIV 0)
(defconst PORTUGUESE-CIV 0)
(defconst ETHIOPIAN-CIV 0)
(defconst MALIAN-CIV 0)
(defconst BERBERS-CIV 0)
(defconst KHMER-CIV 0)
(defconst MALAY-CIV 0)
(defconst BURMESE-CIV 0)
(defconst VIETNAMESE-CIV 0)
#end-if
(defconst italian 19)
(defconst indian 20)
(defconst incan 21)
(defconst magyar 22)
(defconst slavic 23)
(defconst portuguese 24)
(defconst ethiopian 25)
(defconst malian 26)
(defconst berbers 27)
(defconst khmer 28)
(defconst malay 29)
(defconst burmese 30)
(defconst vietnamese 31)
(defconst stable-tarkan 886)
(defconst stable-elite-tarkan 887)
(defconst boyar 876)
(defconst elite-boyar 878)
(defconst kamayuk 879)
(defconst elite-kamayuk 881)
(defconst slinger 185)
(defconst ri-elite-magyar-huszar 472)
(defconst magyar-huszar 869)
(defconst elite-magyar-huszar 871)
(defconst ri-elite-elephant-archer 481)
(defconst elephant-archer 873)
(defconst elite-elephant-archer 875)
(defconst imperial-camel 897)
(defconst ri-elite-genoese-crossbow 468)
(defconst genoese-crossbowman 866)
(defconst elite-genoese-crossbowman 868)
(defconst heavy-eagle-warrior 753)
(defconst condottiero 882)
(defconst ri-chivalry 493)
(defconst ri-inquisition 492)
(defconst ri-sipahi 491)
(defconst ri-madrasah 490)
(defconst ri-ironclad 489)
(defconst ri-boiling-oil 488)
(defconst ri-nomads 487)
(defconst ri-panokseon 486)
(defconst ri-yasama 484)
(defconst ri-marauders 483)
(defconst ri-atlatl 460)
(defconst ri-war-wolf 461)
(defconst ri-greek-fire 464)
(defconst ri-chieftains 463)
(defconst ri-stronghold 482)
(defconst ri-great-wall 462)
(defconst ri-orthodoxy 512)
(defconst ri-druzhina 513)
(defconst ri-elite-boyar 504)
(defconst ri-andean-sling 516)
(defconst ri-couriers 517)
(defconst ri-elite-kamayuk 509)
(defconst ri-sultans 506)
(defconst ri-shatagni 507)
(defconst ri-imperial-camel 521)
(defconst ri-mercenaries 514)
(defconst ri-recurve-bow 515)
(defconst ri-silk-road 499)
(defconst ri-pavise 494)
(defconst ri-revetments 525)
(defconst ri-eagle-warrior 384)
(defconst ri-gillnets 65)
(defconst ri-hunting-dogs 526)
(defconst ri-obsidian-arrows 485)
(defconst siege-tower 885)
(defconst upgraded-palisade-wall 119)
(defconst sea-tower 785)
(defconst sea-wall 788)
(defconst kamayuk-line -258)
(defconst elephant-archer-line -261)
(defconst genoese-crossbowman-line -262)
(defconst magyar-huszar-line -259)
(defconst boyar-line -260)

(defconst organ-gun 1001)
(defconst elite-organ-gun 1003)
(defconst caravel 1004)
(defconst elite-caravel 1006)
(defconst camel-archer 1007)
(defconst elite-camel-archer 1009)
(defconst genitour 1010)
(defconst elite-genitour 1012)
(defconst gbeto 1013)
(defconst elite-gbeto 1015)
(defconst shotel-warrior 1016)
(defconst elite-shotel-warrior 1018)
(defconst camel-archer-line -285)
(defconst genitour-line -250)
(defconst shotel-line -251)
(defconst gbeto-line -252)
(defconst caravel-line -254)
(defconst organ-gun-line -253)
(defconst fire-galley 1103)
(defconst demo-raft 1104)
;(defconst siege-tower 1105)
(defconst ri-elite-camel-archer 565)
(defconst ri-elite-organ-gun 563)
(defconst ri-elite-gbeto 567)
(defconst ri-shotel 569)
(defconst ri-carrack 572)
(defconst ri-arquebus 573)
(defconst ri-royal-heirs 574)
(defconst ri-torsion 575)
(defconst ri-tigui 576)
(defconst ri-mandekalu 577)
(defconst ri-expeditions 578)
(defconst ri-camel-corps 579)
(defconst ri-elite-caravel 597)
(defconst ri-elite-genitour 599)
(defconst ri-arson 602)
(defconst ri-arrowslits 608)

; unit ids
(defconst ballista-elephant 1120)
(defconst elite-ballista-elephant 1122)
(defconst rattan-archer 1129)
(defconst elite-rattan-archer 1131)
(defconst arambai 1126)
(defconst elite-arambai 1128)
(defconst battle-elephant 1134)
(defconst elite-battle-elephant 1123)
(defconst karambit-warrior 1123)
(defconst elite-karambit-warrior 1125)
(defconst imperial-skirmisher 1155)
; research ids
(defconst ri-elite-ballista-elephant 615)
(defconst ri-elite-karambit-warrior 617)
(defconst ri-elite-arambai 619)
(defconst ri-elite-rattan-archer 621)
(defconst ri-tusk-swords 622)
(defconst ri-double-crossbow 623)
(defconst ri-thalassocracy 624)
(defconst ri-forced-levy 625)
(defconst ri-howdah 626)
(defconst ri-manipur-cavalry 627)
(defconst ri-chatras 628)
(defconst ri-paper-money 629)
(defconst ri-elite-battle-elephant 631)
(defconst ri-imperial-skirmisher 655)
; unit lines
(defconst ballista-elephant-line -249)
(defconst rattan-archer-line -248)
(defconst arambai-line -247)
(defconst battle-elephant-line -246)
(defconst karambit-warrior-line -245)


; Other SNs
(defconst sn-food-modifier-percentage 156)
(defconst sn-wood-modifier-percentage 157)
(defconst sn-stone-modifier-percentage 158)
(defconst sn-gold-modifier-percentage 159)


#load-if-not-defined HUN-CIV
(defconst dark-age-villager 30)
(defconst villager-wonder-dark 32)
(defconst villager-wonder-feudal 34)
(defconst default-strategy 201)
(defconst pocket-strategy 201)
(defconst default-unit skirmisher)
(defconst unique-unit-food 120)
(defconst default-flush-unit skirmisher)
(defconst no-gold-flush-unit skirmisher)
(defconst default-ranged archer)
(defconst pocket-unit skirmisher)
(defconst get-lightcav 0)
(defconst scout-unit scout-cavalry-line)
(defconst military-level-flush 2)
(defconst military-level-flush-aggressive 1)
(defconst allow-forward-castle 0)
(defconst sling-time 270)
(defconst sling-number 80)
(defconst sling-two 0)
(defconst blot-size 1)
(defconst villager-barracks 9)
(defconst villager-stable 3)
(defconst villager-archery-range 12)
(defconst villager-monastery 12)
(defconst villager-town-center 15)
(defconst villager-castle 3)
(defconst villager-mining-camp 14)
(defconst villager-siege-workshop 16)
(defconst villager-market 17)
(defconst number-barracks 6)
(defconst number-stables 5)
(defconst number-archery-ranges 7)
(defconst tc-boom-monastery 2)
(defconst farm-count 14)
(defconst pidm-food 10)
(defconst pidm-wood 10)
(defconst pidm-gold 75)
(defconst pidm-stone 5)
(defconst pidm-food2 37)
(defconst pidm-wood2 32)
(defconst pidm-gold2 26)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 39)
(defconst uu-wood2 39)
(defconst uu-gold2 18)
(defconst uu-stone2 3)
(defconst ci-uu-switch-food 38)
(defconst ci-uu-switch-wood 37)
(defconst ci-uu-switch-gold 18)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 100)
(defconst evaluation-distance 0)
(defconst max-wood-escrow 0)
(defconst max-food-escrow 0)
(defconst max-gold-escrow 0)
#end-if

#load-if-defined HUN-CIV
(defconst dark-age-villager 29)
(defconst villager-wonder-dark 32)
(defconst villager-wonder-feudal 34)
(defconst default-strategy 201)
(defconst pocket-strategy 201)
(defconst default-unit knight)
(defconst unique-unit-food 0)
(defconst default-flush-unit scout-cavalry)
(defconst no-gold-flush-unit scout-cavalry)
(defconst default-ranged cavalry-archer)
(defconst pocket-unit knight)
(defconst get-lightcav 1)
(defconst scout-unit scout-cavalry-line)
(defconst military-level-flush 1)
(defconst military-level-flush-aggressive 0)
(defconst allow-forward-castle 1)
(defconst sling-time 600)
(defconst sling-number 100)
(defconst sling-two 0)
(defconst blot-size 1)
(defconst villager-barracks 3)
(defconst villager-stable 3)
(defconst villager-castle 10)
(defconst villager-archery-range 8)
(defconst villager-monastery 6)
(defconst villager-mining-camp 16)
(defconst villager-town-center 15)
(defconst villager-siege-workshop 5)
(defconst villager-market 12)
(defconst number-barracks 9)
(defconst number-stables 8)
(defconst number-archery-ranges 12)
(defconst tc-boom-monastery 2)
(defconst farm-count 14)
(defconst pidm-food 0)
(defconst pidm-wood 30)
(defconst pidm-gold 67)
(defconst pidm-stone 3)
(defconst pidm-food2 30)
(defconst pidm-wood2 32)
(defconst pidm-gold2 33)
(defconst pidm-stone2 5)
(defconst uu-food 36)
(defconst uu-wood 44)
(defconst uu-gold 16)
(defconst uu-stone 4)
(defconst uu-food2 30)
(defconst uu-wood2 36)
(defconst uu-gold2 28)
(defconst uu-stone2 6)
(defconst ci-uu-switch-food 38)
(defconst ci-uu-switch-wood 28)
(defconst ci-uu-switch-gold 28)
(defconst ci-uu-switch-stone 6)
(defconst evaluation-hitpoints 0)
(defconst evaluation-distance 100)
(defconst max-wood-escrow 0)
(defconst max-food-escrow 1000)
(defconst max-gold-escrow 500)
#end-if

;garbage vars
(defconst imperial-food 1000)
(defconst imperial-gold 800)
(defconst imperial-f2 800)
(defconst imperial-g2 650)
(defconst imperial-fs 1100)
(defconst imperial-gs 950)
(defconst castle-food 800)
(defconst castle-gold 200)
(defconst castle-f2 680)
(defconst castle-g2 160)
(defconst castle-fs 900)
(defconst castle-gs 350)
(defconst feudal-food 500)
(defconst feudal-f2 470)
(defconst farm-wood 60)
(defconst market-cost 175)

#load-if-defined POST-IMPERIAL-AGE-START
(defconst pop-house 20)
#else
(defconst pop-house 50)
#end-if
#load-if-defined DEATH-MATCH
(defconst housing-headroom1 40)
(defconst housing-headroom2 40)
(defconst camp-distance 45)
(defconst food-distance 0)
(defconst wood-distance 0); -1
#load-if-defined POST-IMPERIAL-AGE-START
(defconst market-time 420)
#else
(defconst market-time 900)
#end-if
(defconst number-markets 4)
(defconst number-blacksmiths 2)
(defconst mill-distance 17)
(defconst hunt-distance 0)
(defconst spread-interval 100); 40
(defconst home-exploration-time 0)
(defconst special-attack-type2 town-center)
#else
(defconst housing-headroom1 3)
(defconst housing-headroom2 25)
(defconst camp-distance 15)
(defconst food-distance 15); 25
(defconst wood-distance 0)
(defconst market-time 2700)
(defconst number-blacksmiths 1)
(defconst number-markets 3)
#load-if-not-defined SCANDANAVIA-MAP
(defconst mill-distance 18)
(defconst hunt-distance 8)
#else
(defconst mill-distance 28)
(defconst hunt-distance 32)
#end-if
(defconst spread-interval 150); 180
#load-if-not-defined DEFEND-WONDER
#load-if-not-defined WONDER-RACE
#load-if-not-defined UP-POCKET-POSITION
(defconst home-exploration-time 420); std flank
#else
(defconst home-exploration-time 480); std pocket
#end-if
#else
(defconst home-exploration-time 4200); wonder race
#end-if
#else
(defconst home-exploration-time 0); 30 ; wonder defense
#end-if
(defconst special-attack-type2 lumber-camp)
#end-if
;#load-if-defined NOMAD-MAP
;(defconst wood-distance2 -1)
;#else
(defconst wood-distance2 30)
;#end-if
#load-if-defined SALT-MARSH-MAP
(defconst dock-placement 1)
#else
(defconst dock-placement 0)
#end-if
#load-if-defined YUCATAN-MAP
(defconst max-warships 20)
#end-if
#load-if-defined HIGHLAND-MAP
(defconst max-warships 20)
#end-if
#load-if-not-defined HIGHLAND-MAP
#load-if-not-defined YUCATAN-MAP
(defconst max-warships 35)
#end-if
#end-if
#load-if-defined ARENA-MAP
(defconst camp-distance-tc 15)
#else
(defconst camp-distance-tc 22)
#end-if
#load-if-defined REGICIDE
#load-if-defined FORTRESS-MAP
(defconst lumber-delay 40)
#else
(defconst lumber-delay 180)
#end-if
#else
(defconst lumber-delay 180)
#end-if
#load-if-defined TINY-MAP
(defconst tsa-increment 6)
(defconst shorefishreq 50)
(defconst shorefishreq2 25)
(defconst deepfishreq 6)
(defconst deepfishreq2 3)
(defconst heavy-wood 7000)
(defconst max-trade-cart 22)
(defconst trade-distance 80)
(defconst timer-lcs 30)
#end-if
#load-if-defined SMALL-MAP
(defconst tsa-increment 7)
(defconst shorefishreq 100)
(defconst shorefishreq2 50)
(defconst deepfishreq 8)
(defconst deepfishreq2 4)
(defconst heavy-wood 8000)
(defconst max-trade-cart 28)
(defconst trade-distance 105)
(defconst timer-lcs 36)
#end-if
#load-if-defined MEDIUM-MAP
(defconst tsa-increment 8)
(defconst shorefishreq 150)
(defconst shorefishreq2 75)
(defconst deepfishreq 10)
(defconst deepfishreq2 5)
(defconst heavy-wood 10000)
(defconst max-trade-cart 35)
(defconst trade-distance 130)
(defconst timer-lcs 42)
#end-if
#load-if-defined NORMAL-MAP
(defconst tsa-increment 10)
(defconst shorefishreq 200)
(defconst shorefishreq2 100)
(defconst deepfishreq 12)
(defconst deepfishreq2 6)
(defconst heavy-wood 14000)
(defconst max-trade-cart 40)
(defconst trade-distance 155)
(defconst timer-lcs 54)
#end-if
#load-if-defined LARGE-MAP
(defconst tsa-increment 12)
(defconst shorefishreq 250)
(defconst shorefishreq2 150)
(defconst deepfishreq 14)
(defconst deepfishreq2 7)
(defconst heavy-wood 18000)
(defconst max-trade-cart 45)
(defconst trade-distance 180)
(defconst timer-lcs 66)
#end-if
#load-if-defined GIANT-MAP
(defconst tsa-increment 14)
(defconst shorefishreq 300)
(defconst shorefishreq2 150)
(defconst deepfishreq 16)
(defconst deepfishreq2 8)
(defconst heavy-wood 22000)
(defconst max-trade-cart 55)
(defconst trade-distance 205)
(defconst timer-lcs 78)
#end-if
#load-if-defined LUDIKRIS-MAP
(defconst tsa-increment 20)
(defconst shorefishreq 350)
(defconst shorefishreq2 175)
(defconst deepfishreq 18)
(defconst deepfishreq2 9)
(defconst heavy-wood 26000)
(defconst max-trade-cart 75)
(defconst trade-distance 360)
(defconst timer-lcs 102)
#end-if
#load-if-defined HIGHLAND-MAP
(defconst water-mixed 1000)
(defconst water-islands 1001)
#else
#load-if-defined TINY-MAP
(defconst water-mixed 1000)
(defconst water-islands 1001)
#end-if
#load-if-defined SMALL-MAP
(defconst water-mixed 1250)
(defconst water-islands 1251)
#end-if
#load-if-defined MEDIUM-MAP
(defconst water-mixed 1500)
(defconst water-islands 1501)
#end-if
#load-if-defined NORMAL-MAP
(defconst water-mixed 1750)
(defconst water-islands 1751)
#end-if
#load-if-defined LARGE-MAP
(defconst water-mixed 2000)
(defconst water-islands 2001)
#end-if
#load-if-defined GIANT-MAP
(defconst water-mixed 2500)
(defconst water-islands 2501)
#end-if
#load-if-defined LUDIKRIS-MAP
(defconst water-mixed 3000)
(defconst water-islands 3001)
#end-if
#end-if
#load-if-not-defined TURBO-RANDOM-MAP
#load-if-not-defined POPULATION-CAP-25
(defconst number-rams 4)
(defconst number-garrison-units 4)
#load-if-defined DIFFICULTY-EASIEST
(defconst villager-feudal 6)
(defconst villager-flush 6)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst villager-feudal 8)
(defconst villager-flush 8)
#end-if
#load-if-not-defined DIFFICULTY-EASIEST
#load-if-not-defined DIFFICULTY-EASY
#load-if-defined LOW-RESOURCES-START
#load-if-defined DIFFICULTY-MODERATE
(defconst villager-flush 26)
(defconst villager-feudal 29)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst villager-flush 25)
(defconst villager-feudal 29); 28
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst villager-flush 24)
(defconst villager-feudal 28); 27
#end-if
#load-if-defined DIFFICULTY-EXTREME
(defconst villager-flush 24)
(defconst villager-feudal 28); 27
#end-if
#end-if
#load-if-defined MEDIUM-RESOURCES-START
(defconst villager-flush 19)
(defconst villager-feudal 21)
#end-if
#load-if-defined HIGH-RESOURCES-START
(defconst villager-flush 14)
(defconst villager-feudal 16)
#end-if
#load-if-defined RANDOM-RESOURCES-START
(defconst villager-flush 24)
(defconst villager-feudal 28)
#end-if
#load-if-defined ULTRA-RESOURCES-START
(defconst villager-flush 8)
(defconst villager-feudal 10)
#end-if
#load-if-defined INFINITE-RESOURCES-START
(defconst villager-flush 6)
(defconst villager-feudal 8)
#end-if
#end-if ;NOT EASY
#end-if ;NOT EASIEST
#else ; 25 on turbo
(defconst number-rams 3)
(defconst number-garrison-units 1)
(defconst villager-feudal 24)
(defconst villager-flush 24)
#end-if; end 25
#else; not turbo now
#load-if-not-defined POPULATION-CAP-25
(defconst number-rams 4)
(defconst number-garrison-units 4)
#else
(defconst number-rams 3)
(defconst number-garrison-units 1)
#end-if
(defconst villager-flush 5); 15
(defconst villager-feudal 5); 16
#end-if
#load-if-defined GOLD-RUSH-MAP
#load-if-defined TINY-MAP
(defconst castle-age-camp-distance 48); high camp distance to reach center gold
#end-if
#load-if-defined SMALL-MAP
(defconst castle-age-camp-distance 48)
#end-if
#load-if-defined MEDIUM-MAP
(defconst castle-age-camp-distance 60)
#end-if
#load-if-defined NORMAL-MAP
(defconst castle-age-camp-distance 84)
#end-if
#load-if-defined LARGE-MAP
(defconst castle-age-camp-distance 102)
#end-if
#load-if-defined GIANT-MAP
(defconst castle-age-camp-distance 120)
#end-if
#load-if-defined LUDIKRIS-MAP
(defconst castle-age-camp-distance 192)
#end-if
#else
(defconst castle-age-camp-distance 35)
#end-if ; not gold-rush-map
(defconst scorpion-gold-min 170)
(defconst villager-coinage 60)
(defconst safe-town 45)
#load-if-defined POPULATION-CAP-25
(defconst minNavy 3)
(defconst max-fleet 15)
(defconst twenty-five-percent-pop 6)
(defconst thirty-percent-pop 7)
(defconst fourty-percent-pop 10)
(defconst fifty-percent-pop 13)
(defconst sixty-percent-pop 15)
(defconst seventy-five-percent-pop 19)
(defconst eighty-five-percent-pop 21)
#load-if-defined DIFFICULTY-EASIEST
(defconst max-trade-pop 1)
(defconst max-civ 5)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst max-trade-pop 1)
(defconst max-civ 6)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst max-trade-pop 1)
(defconst max-civ 8)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst max-trade-pop 2)
(defconst max-civ 10)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst max-trade-pop 3)
(defconst max-civ 12)
#end-if
#load-if-defined DIFFICULTY-EXTREME
(defconst max-trade-pop 3)
(defconst max-civ 12)
#end-if
(defconst max-civ-pop 20)
(defconst del-civ-pop 24)
(defconst max-pop 25)
#load-if-not-defined SUDDEN-DEATH
(defconst tc-level-one 1)
(defconst tc-level-two 1)
(defconst tc-level-three 1)
(defconst tc-level-four 1)
(defconst tc-level-five 1)
#else
(defconst tc-level-one 1)
(defconst tc-level-two 1)
(defconst tc-level-three 1)
(defconst tc-level-four 1)
(defconst tc-level-five 1)
#end-if
(defconst low-min-number-upgrade 1)
(defconst mid-min-number-upgrade 2)
(defconst high-min-number-upgrade 3)
#end-if
#load-if-defined POPULATION-CAP-50
(defconst minNavy 4)
(defconst max-fleet 25)
(defconst twenty-five-percent-pop 13)
(defconst thirty-percent-pop 15)
(defconst fourty-percent-pop 20)
(defconst fifty-percent-pop 25)
(defconst sixty-percent-pop 30)
(defconst seventy-five-percent-pop 38)
(defconst eighty-five-percent-pop 42)
#load-if-defined DIFFICULTY-EASIEST
(defconst max-trade-pop 1)
(defconst max-civ 6)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst max-trade-pop 2)
(defconst max-civ 10)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst max-trade-pop 3)
(defconst max-civ 16)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst max-trade-pop 4)
(defconst max-civ 22)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst max-trade-pop 5)
(defconst max-civ 28)
#end-if
#load-if-defined DIFFICULTY-EXTREME
(defconst max-trade-pop 5)
(defconst max-civ 28)
#end-if
(defconst max-civ-pop 45)
(defconst del-civ-pop 48)
(defconst max-pop 50)
#load-if-not-defined SUDDEN-DEATH
(defconst tc-level-one 1)
(defconst tc-level-two 1)
(defconst tc-level-three 1)
(defconst tc-level-four 2)
(defconst tc-level-five 2)
#else
(defconst tc-level-one 1)
(defconst tc-level-two 1)
(defconst tc-level-three 1)
(defconst tc-level-four 1)
(defconst tc-level-five 1)
#end-if
(defconst low-min-number-upgrade 1)
(defconst mid-min-number-upgrade 3)
(defconst high-min-number-upgrade 5)
#end-if
#load-if-defined POPULATION-CAP-75
(defconst minNavy 5)
(defconst max-fleet 40)
(defconst twenty-five-percent-pop 19)
(defconst thirty-percent-pop 22)
(defconst fourty-percent-pop 30)
(defconst fifty-percent-pop 38)
(defconst sixty-percent-pop 45)
(defconst seventy-five-percent-pop 57)
(defconst eighty-five-percent-pop 64)
#load-if-defined DIFFICULTY-EASIEST
(defconst max-trade-pop 1)
(defconst max-civ 6)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst max-trade-pop 2)
(defconst max-civ 12)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst max-trade-pop 3)
(defconst max-civ 21)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst max-trade-pop 5)
(defconst max-civ 32)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst max-trade-pop 7)
(defconst max-civ 45)
#end-if
#load-if-defined DIFFICULTY-EXTREME
(defconst max-trade-pop 7)
(defconst max-civ 45)
#end-if
(defconst max-civ-pop 65)
(defconst del-civ-pop 72)
(defconst max-pop 75)
#load-if-not-defined SUDDEN-DEATH
(defconst tc-level-one 1)
(defconst tc-level-two 1)
(defconst tc-level-three 1)
(defconst tc-level-four 2)
(defconst tc-level-five 2)
#else
(defconst tc-level-one 1)
(defconst tc-level-two 1)
(defconst tc-level-three 1)
(defconst tc-level-four 1)
(defconst tc-level-five 1)
#end-if
(defconst low-min-number-upgrade 2)
(defconst mid-min-number-upgrade 4)
(defconst high-min-number-upgrade 6)
#end-if
#load-if-defined POPULATION-CAP-100
(defconst minNavy 6)
(defconst max-fleet 40)
(defconst twenty-five-percent-pop 25)
(defconst thirty-percent-pop 30)
(defconst fourty-percent-pop 40)
(defconst fifty-percent-pop 50)
(defconst sixty-percent-pop 60)
(defconst seventy-five-percent-pop 75)
(defconst eighty-five-percent-pop 85)
#load-if-defined DIFFICULTY-EASIEST
(defconst max-trade-pop 1)
(defconst max-civ 7)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst max-trade-pop 3)
(defconst max-civ 14)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst max-trade-pop 5)
(defconst max-civ 26)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst max-trade-pop 7)
(defconst max-civ 42)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst max-trade-pop 9)
(defconst max-civ 65)
#end-if
#load-if-defined DIFFICULTY-EXTREME
(defconst max-trade-pop 9)
(defconst max-civ 65)
#end-if
(defconst max-civ-pop 95)
(defconst del-civ-pop 98)
(defconst max-pop 100)
#load-if-not-defined SUDDEN-DEATH
(defconst tc-level-one 1)
(defconst tc-level-two 2)
(defconst tc-level-three 2)
(defconst tc-level-four 2)
(defconst tc-level-five 3)
#else
(defconst tc-level-one 1)
(defconst tc-level-two 1)
(defconst tc-level-three 1)
(defconst tc-level-four 1)
(defconst tc-level-five 1)
#end-if
(defconst low-min-number-upgrade 2)
(defconst mid-min-number-upgrade 5)
(defconst high-min-number-upgrade 8)
#end-if
#load-if-defined POPULATION-CAP-125
(defconst minNavy 7)
(defconst max-fleet 50)
(defconst twenty-five-percent-pop 32)
(defconst thirty-percent-pop 37)
(defconst fourty-percent-pop 50)
(defconst fifty-percent-pop 63)
(defconst sixty-percent-pop 75)
(defconst seventy-five-percent-pop 94)
(defconst eighty-five-percent-pop 106)
#load-if-defined DIFFICULTY-EASIEST
(defconst max-trade-pop 1)
(defconst max-civ 7)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst max-trade-pop 3)
(defconst max-civ 16)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst max-trade-pop 5)
(defconst max-civ 32)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst max-trade-pop 8)
(defconst max-civ 52)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst max-trade-pop 12)
(defconst max-civ 75)
#end-if
#load-if-defined DIFFICULTY-EXTREME
(defconst max-trade-pop 12)
(defconst max-civ 75)
#end-if
(defconst max-civ-pop 115)
(defconst del-civ-pop 123)
(defconst max-pop 125)
#load-if-not-defined SUDDEN-DEATH
(defconst tc-level-one 1)
(defconst tc-level-two 2)
(defconst tc-level-three 2)
(defconst tc-level-four 3)
(defconst tc-level-five 3)
#else
(defconst tc-level-one 1)
(defconst tc-level-two 1)
(defconst tc-level-three 1)
(defconst tc-level-four 1)
(defconst tc-level-five 1)
#end-if
(defconst low-min-number-upgrade 3)
(defconst mid-min-number-upgrade 6)
(defconst high-min-number-upgrade 9)
#end-if
#load-if-defined POPULATION-CAP-150
(defconst minNavy 8)
(defconst max-fleet 56)
(defconst twenty-five-percent-pop 38)
(defconst thirty-percent-pop 45)
(defconst fourty-percent-pop 60)
(defconst fifty-percent-pop 75)
(defconst sixty-percent-pop 90)
(defconst seventy-five-percent-pop 113)
(defconst eighty-five-percent-pop 128)
#load-if-defined DIFFICULTY-EASIEST
(defconst max-trade-pop 2)
(defconst max-civ 7)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst max-trade-pop 5)
(defconst max-civ 18)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst max-trade-pop 9)
(defconst max-civ 39)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst max-trade-pop 14)
(defconst max-civ 65)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst max-trade-pop 20)
(defconst max-civ 90)
#end-if
#load-if-defined DIFFICULTY-EXTREME
(defconst max-trade-pop 20)
(defconst max-civ 90)
#end-if
(defconst max-civ-pop 140)
(defconst del-civ-pop 148)
(defconst max-pop 150)
#load-if-not-defined SUDDEN-DEATH
(defconst tc-level-one 1)
(defconst tc-level-two 2)
(defconst tc-level-three 3)
(defconst tc-level-four 3)
(defconst tc-level-five 4)
#else
(defconst tc-level-one 1)
(defconst tc-level-two 1)
(defconst tc-level-three 1)
(defconst tc-level-four 1)
(defconst tc-level-five 1)
#end-if
(defconst low-min-number-upgrade 4)
(defconst mid-min-number-upgrade 7)
(defconst high-min-number-upgrade 10)
#end-if
#load-if-defined POPULATION-CAP-175
(defconst minNavy 9)
(defconst max-fleet 63)
(defconst twenty-five-percent-pop 44)
(defconst thirty-percent-pop 52)
(defconst fourty-percent-pop 70)
(defconst fifty-percent-pop 88)
(defconst sixty-percent-pop 105)
(defconst seventy-five-percent-pop 131)
(defconst eighty-five-percent-pop 149)
#load-if-defined DIFFICULTY-EASIEST
(defconst max-trade-pop 2)
(defconst max-civ 7)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst max-trade-pop 5)
(defconst max-civ 20)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst max-trade-pop 11)
(defconst max-civ 43)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst max-trade-pop 24)
(defconst max-civ 80)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst max-trade-pop 34)
(defconst max-civ 110)
#end-if
#load-if-defined DIFFICULTY-EXTREME
(defconst max-trade-pop 34)
(defconst max-civ 110)
#end-if
(defconst max-civ-pop 165)
(defconst del-civ-pop 173)
(defconst max-pop 175)
#load-if-not-defined SUDDEN-DEATH
(defconst tc-level-one 1)
(defconst tc-level-two 2)
(defconst tc-level-three 3)
(defconst tc-level-four 4)
(defconst tc-level-five 5)
#else
(defconst tc-level-one 1)
(defconst tc-level-two 1)
(defconst tc-level-three 1)
(defconst tc-level-four 1)
(defconst tc-level-five 1)
#end-if
(defconst low-min-number-upgrade 4)
(defconst mid-min-number-upgrade 8)
(defconst high-min-number-upgrade 12)
#end-if
#load-if-defined POPULATION-CAP-200
#load-if-not-defined POPULATION-CAP-EXTENDED
(defconst minNavy 10)
(defconst max-fleet 70)
(defconst twenty-five-percent-pop 50)
(defconst thirty-percent-pop 60)
(defconst fourty-percent-pop 80)
(defconst fifty-percent-pop 100)
(defconst sixty-percent-pop 120)
(defconst seventy-five-percent-pop 150)
(defconst eighty-five-percent-pop 170)
#load-if-defined DIFFICULTY-EASIEST
(defconst max-trade-pop 2)
(defconst max-civ 7)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst max-trade-pop 5)
(defconst max-civ 21)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst max-trade-pop 13)
(defconst max-civ 48)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst max-trade-pop 26)
(defconst max-civ 89)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst max-trade-pop 40)
(defconst max-civ 125)
#end-if
#load-if-defined DIFFICULTY-EXTREME
(defconst max-trade-pop 40)
(defconst max-civ 125)
#end-if
(defconst max-civ-pop 185)
#load-if-not-defined GOTHIC-CIV
(defconst del-civ-pop 196)
(defconst max-pop 200)
#else
(defconst del-civ-pop 206)
(defconst max-pop 210)
#end-if
#end-if
#load-if-not-defined SUDDEN-DEATH
(defconst tc-level-one 1)
(defconst tc-level-two 2)
(defconst tc-level-three 3)
(defconst tc-level-four 4)
(defconst tc-level-five 5)
#else
(defconst tc-level-one 1)
(defconst tc-level-two 1)
(defconst tc-level-three 1)
(defconst tc-level-four 1)
(defconst tc-level-five 1)
#end-if
(defconst low-min-number-upgrade 4)
(defconst mid-min-number-upgrade 8)
(defconst high-min-number-upgrade 12)
#end-if
#load-if-defined POPULATION-CAP-EXTENDED
#load-if-defined POPULATION-CAP-250
(defconst minNavy 11)
(defconst max-fleet 77)
(defconst twenty-five-percent-pop 63)
(defconst thirty-percent-pop 75)
(defconst fourty-percent-pop 100)
(defconst fifty-percent-pop 125)
(defconst sixty-percent-pop 150)
(defconst seventy-five-percent-pop 187)
(defconst eighty-five-percent-pop 212)
#load-if-not-defined SUDDEN-DEATH
(defconst tc-level-one 1)
(defconst tc-level-two 2)
(defconst tc-level-three 3)
(defconst tc-level-four 4)
(defconst tc-level-five 5)
#else
(defconst tc-level-one 1)
(defconst tc-level-two 1)
(defconst tc-level-three 1)
(defconst tc-level-four 1)
(defconst tc-level-five 1)
#end-if
(defconst low-min-number-upgrade 4)
(defconst mid-min-number-upgrade 8)
(defconst high-min-number-upgrade 12)
#load-if-defined DIFFICULTY-EASIEST
(defconst max-trade-pop 2)
(defconst max-civ 8)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst max-trade-pop 8)
(defconst max-civ 23)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst max-trade-pop 17)
(defconst max-civ 51)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst max-trade-pop 33)
(defconst max-civ 90)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst max-trade-pop 55)
(defconst max-civ 130)
#end-if
#load-if-defined DIFFICULTY-EXTREME
(defconst max-trade-pop 55)
(defconst max-civ 130)
#end-if
(defconst max-civ-pop 225)
(defconst del-civ-pop 245)
(defconst max-pop 250)
#end-if
#load-if-not-defined POPULATION-CAP-250; Load for Pop >= 300
(defconst minNavy 14)
(defconst max-fleet 105)
(defconst twenty-five-percent-pop 75)
(defconst thirty-percent-pop 90)
(defconst fourty-percent-pop 120)
(defconst fifty-percent-pop 150)
(defconst sixty-percent-pop 180)
(defconst seventy-five-percent-pop 225)
(defconst eighty-five-percent-pop 255)
#load-if-not-defined SUDDEN-DEATH
(defconst tc-level-one 1)
(defconst tc-level-two 2)
(defconst tc-level-three 3)
(defconst tc-level-four 4)
(defconst tc-level-five 5)
#else
(defconst tc-level-one 1)
(defconst tc-level-two 1)
(defconst tc-level-three 1)
(defconst tc-level-four 1)
(defconst tc-level-five 1)
#end-if
(defconst low-min-number-upgrade 5)
(defconst mid-min-number-upgrade 9)
(defconst high-min-number-upgrade 13)
#load-if-defined DIFFICULTY-EASIEST
(defconst max-trade-pop 2)
(defconst max-civ 8)
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst max-trade-pop 8)
(defconst max-civ 25)
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst max-trade-pop 17)
(defconst max-civ 57)
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst max-trade-pop 33)
(defconst max-civ 99)
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst max-trade-pop 55)
(defconst max-civ 140)
#end-if
#load-if-defined DIFFICULTY-EXTREME
(defconst max-trade-pop 55)
(defconst max-civ 140)
#end-if
(defconst max-civ-pop 265)
(defconst del-civ-pop 293)
(defconst max-pop 300)
#end-if
#end-if

#load-if-defined DIFFICULTY-EASIEST
(defconst ability-to-dodge 100)
(defconst ability-to-kite 100)
(defconst enable-patrol 0)
(defconst local-targeting 0)
(defconst wood-distance-farm 9); 12
#end-if
#load-if-defined DIFFICULTY-EASY
(defconst ability-to-dodge 75)
(defconst ability-to-kite 85)
(defconst enable-patrol 0)
(defconst local-targeting 0)
(defconst wood-distance-farm 8); 10
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defconst ability-to-dodge 50)
(defconst ability-to-kite 70)
(defconst enable-patrol 0)
(defconst local-targeting 0)
(defconst wood-distance-farm 7); 8
#end-if
#load-if-defined DIFFICULTY-HARD
(defconst ability-to-dodge 25)
(defconst ability-to-kite 55)
(defconst enable-patrol 1)
(defconst local-targeting 0)
(defconst wood-distance-farm 6); 7
#end-if
#load-if-defined DIFFICULTY-HARDEST
(defconst ability-to-dodge 0)
(defconst ability-to-kite 40)
(defconst enable-patrol 1)
(defconst local-targeting 1)
(defconst wood-distance-farm 5); 6
#end-if
#load-if-defined DIFFICULTY-EXTREME
(defconst ability-to-dodge 0)
(defconst ability-to-kite 40)
(defconst enable-patrol 1)
(defconst local-targeting 1)
(defconst wood-distance-farm 5); 6
#end-if
#load-if-defined ARABIA-MAP
(defconst pop60-town-size 20)
(defconst pop90-town-size 24)
(defconst pop120-town-size 26)
#end-if
#load-if-defined ARENA-MAP
(defconst pop60-town-size 20)
(defconst pop90-town-size 24)
(defconst pop120-town-size 26)
#end-if
#load-if-not-defined ARENA-MAP
#load-if-not-defined ARABIA-MAP
(defconst pop60-town-size 20)
(defconst pop90-town-size 24)
(defconst pop120-town-size 28)
#end-if
#end-if

#load-if-not-defined INCAN-CIV
#load-if-not-defined FRANKISH-CIV
(defconst castle-stone 650)
#else ; Franks
(defconst castle-stone 488)
#end-if
#else ; Incas
(defconst castle-stone 553)
#end-if

#load-if-defined UP-POCKET-POSITION
(defconst scouting-type scout-mirror)
#else
(defconst scouting-type scout-flank)
#end-if

#load-if-not-defined BERBERS-CIV
#load-if-not-defined SARACEN-CIV
#load-if-not-defined TURKISH-CIV
#load-if-not-defined INDIAN-CIV
(defconst extra-anti-cav-unit spearman-line)
#else
(defconst extra-anti-cav-unit camel-line)
#end-if
#else
(defconst extra-anti-cav-unit camel-line)
#end-if
#else
(defconst extra-anti-cav-unit camel-line)
#end-if
#else
(defconst extra-anti-cav-unit camel-line)
#end-if